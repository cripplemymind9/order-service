syntax = "proto3";

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "validate/validate.proto";
import "google/protobuf/timestamp.proto";

option go_package = "pkg/api/v1;api";
package api.v1.orderservice;

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
    consumes: ["application/json"];
    produces: ["application/json"];
    info: {
      title: "Order service";
      version: "1.0.0";
      description: "Service for managing orders";
    };
};

// Статусы заказа
enum OrderStatus {
    ORDER_STATUS_UNSPECIFIED = 0;
    ORDER_STATUS_CREATED = 1;
    ORDER_STATUS_PROCESSING = 2;
    ORDER_STATUS_APPROVED = 3;
    ORDER_STATUS_CANCELLED = 4;
    ORDER_STATUS_COMPLETED = 5;
}

// Запрос на создание заказа
message CreateOrderRequest {
    int64 user_id = 1 [(validate.rules).int64 = {
        gt: 0
    }];
    int64 product_id = 2 [(validate.rules).int64 = {
        gt: 0
    }];
    int32 quantity = 3 [(validate.rules).int32 = {
        gt: 0
    }];
}

// Ответ на создание заказа
message CreateOrderResponse {
    int64 order_id = 1;
}

// Запрос на получение информации о заказе
message GetOrderRequest {
    int64 order_id = 1 [(validate.rules).int64 = {
        gt: 0
    }];
}

// Ответ с информацией о заказе
message GetOrderResponse {
    int64 order_id = 1;
    int64 user_id = 2;
    int64 product_id = 3;
    int32 quantity = 4;
    OrderStatus status = 5;
    google.protobuf.Timestamp created_at = 6;
    google.protobuf.Timestamp updated_at = 7;
}

// Запрос на отмену заказа
message CancelOrderRequest {
    int64 order_id = 1 [(validate.rules).int64 = {
        gt: 0
    }];
}

// Ответ на отмену заказа
message CancelOrderResponse {
    int64 order_id = 1;
}

// Сервис для работы с заказами
service OrderService {
    // Создание нового заказа
    rpc CreateOrder(CreateOrderRequest) returns (CreateOrderResponse) {
        option (google.api.http) = {
            post: "/orders"
            body: "*"
        };
    }

    // Получение информации о заказе
    rpc GetOrder(GetOrderRequest) returns (GetOrderResponse) {
        option (google.api.http) = {
            get: "/orders/{order_id}"
        };
    }

    // Отмена заказа
    rpc CancelOrder(CancelOrderRequest) returns (CancelOrderResponse) {
        option (google.api.http) = {
            post: "/orders/{order_id}/cancel"
        };
    }
}
